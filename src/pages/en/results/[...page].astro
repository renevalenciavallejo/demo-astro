---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import cycling from "@assets/images/logo-cycling.svg";
import running from "@assets/images/logo-running.svg";
import { getLangFromUrl, useTranslations } from "src/i18n/utils";
import { format } from "date-fns";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths({ paginate }) {
  const englishChallenges = await getCollection(
    "completed-challenges",
    ({ id }) => {
      return id.startsWith("en/");
    }
  );

  return paginate(englishChallenges, { pageSize: 10 });
}

const { page } = Astro.props;
---

<Layout
  title="Race and challenge results - Swetro"
  description="Race and challenge results: Discover who finished each competition on our platform!"
  image=""
>
  <main>
    <section
      class="flex flex-row items-center justify-center h-[26.75rem] md:h-[23.4375rem] px-4 md:px-14 bg-black bg-[url(/images/challenges-section-1-background-desktop.webp)] bg-no-repeat"
    >
      <h1
        class="text-[2rem] md:text-[2.5rem] leading-[3rem] font-normal text-center text-white"
      >
        Race and challenge results <span
          class="inline md:block font-normal md:font-bold"></span>
      </h1>
    </section>
    <section class="px-4 md:px-14 bg-black">
      <div
        class="relative overflow-x-auto"
        style=" scrollbar-color: #CAFF00 #161616;"
      >
        <table class="w-full table-auto text-sm text-left text-white">
          <thead
            class="text-lg font-bold leading-8 border-b border-opacity-25 border-white"
          >
            <tr>
              <th scope="col" class="px-6 py-3"
                >{t("challenge-grid.header.title")}</th
              >
              <th scope="col" class="px-6 py-3"
                >{t("challenge-grid.header.startTime")}</th
              >
              <th scope="col" class="px-6 py-3"
                >{t("challenge-grid.header.activityType")}</th
              >
              <th scope="col" class="px-6 py-3"></th>
            </tr>
          </thead>
          <tbody>
            {
              page.data.map(({ data }) => (
                <tr class="hover:bg-[#222222]">
                  <td class="px-6 py-3">
                    <a href="" class="no-underline hover:underline">
                      <span class="flex items-center">
                        {() => {
                          switch (data.activityType) {
                            case "Cycling":
                              return (
                                <Image
                                  src={cycling}
                                  alt={data.activityType}
                                  class="w-6 h-6 mr-3"
                                />
                              );
                            case "Running":
                              return (
                                <Image
                                  src={running}
                                  alt={data.activityType}
                                  class="w-6 h-6 mr-3"
                                />
                              );
                            default:
                              return (
                                <Image
                                  src={running}
                                  alt={data.activityType}
                                  class="w-6 h-6 mr-3"
                                />
                              );
                          }
                        }}
                        {data.title}
                      </span>
                    </a>
                  </td>
                  <td class="px-6 py-3">
                    {format(data.startTime, " MMM d, yyyy")}
                  </td>
                  <td class="px-6 py-3">{data.activityType}</td>
                  <td class="px-6 py-3"></td>
                </tr>
              ))
            }
          </tbody>
        </table>
      </div>
      <div class="flex flex-col items-center py-8">
        <span class="text-sm text-gray-400">
          {t("grid.message.pagination-showing")}
          <span class="font-semibold text-white">{page.start + 1}</span>
          {t("grid.message.pagination-to")}
          <span class="font-semibold text-white">{page.end + 1}</span>
          {t("grid.message.pagination-of-total")}
          <span class="font-semibold text-white">{page.total}</span>
          {t("grid.message.pagination-records")}
        </span>
        <div class="inline-flex mt-2 xs:mt-0">
          {
            page.url.prev ? (
              <a href={page.url.prev}>
                <span class="flex items-center justify-center px-4 h-10 text-base font-medium text-white bg-[#161616] rounded-l hover:bg-[#222222]">
                  <svg
                    class="w-3.5 h-3.5 mr-2"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 14 10"
                  >
                    <path
                      stroke="currentColor"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M13 5H1m0 0 4 4M1 5l4-4"
                    />
                  </svg>
                  {t("grid.message.pagination-previous")}
                </span>
              </a>
            ) : null
          }

          {
            page.url.next ? (
              <a href={page.url.next}>
                <span class="flex items-center justify-center px-4 h-10 text-base font-medium text-white bg-[#161616] border-0 border-l border-gray-700 rounded-r hover:bg-[#222222]">
                  {t("grid.message.pagination-next")}
                  <svg
                    class="w-3.5 h-3.5 ml-2"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 14 10"
                  >
                    <path
                      stroke="currentColor"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M1 5h12m0 0L9 1m4 4L9 9"
                    />
                  </svg>
                </span>
              </a>
            ) : null
          }
        </div>
      </div>
    </section>
  </main>
</Layout>
